stages:
- stage: Test
  jobs:
    - job: Test
      workspace:
        clean: all # what to clean up before the job runs - outputs | resources | all
      steps:     
        # Install .Net Core 2.0 Version
        - task: UseDotNet@2
          displayName: 'Install .NET Core SDK 2.0'
          inputs:
            version: 2.0.x

        # Remove PostBuildEvents
        - task: CmdLine@2
          displayName: 'Remove PostBuildEvents from .csproj files'
          inputs:
            script: find . -name \*.csproj -exec sed -i '/<Exec Command="xcopy.*>/d' {} \;
       
        # Prepare analysis on SonarCloud
        - task: SonarCloudPrepare@1
          displayName: 'Prepare analysis on SonarCloud'
          inputs:
            SonarCloud: 'CIBG SonarCloud'        # Name of the Service Connection in devops for SonarCloud
            organization: 'cibg' 
            scannerMode: 'MSBuild'
            projectKey: 'MSS.Backend'
            projectName: 'CoronaMelder.Backend'
        
        # Install .Net Core 3.1 LTS Version
        - task: UseDotNet@2
          displayName: 'Install .NET Core SDK'
          inputs:
            version: 3.1.x
        # Restore 
        - task: NuGetToolInstaller@1
          displayName: 'Install NuGet Tool'

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'

        # Run Unit Tests
        - task: DotNetCoreCLI@2
          displayName: Run unittests
          inputs:
            command: "test"
            projects: $(ProjectsToTest)
            arguments: '--filter db!=ss --logger trx'

        # Install .Net Core 2.0 Version
        - task: UseDotNet@2
          displayName: 'Install .NET Core SDK 2.0'
          inputs:
            version: 2.0.x
        # Run Sonar Code Analysis
        - task: SonarCloudAnalyze@1
          displayName: 'Run Sonar Code Analysis'

        # Publish Sonar Analysis op sonarcloud.io
        - task: SonarCloudPublish@1
          inputs:
            pollingTimeoutSec: '600'